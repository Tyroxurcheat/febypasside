local player = game.Players.LocalPlayer
local camera = workspace.CurrentCamera
local touchedPlayers = {}
local UIS = game:GetService("UserInputService")

local function sendCommand(command)
    local args = { command }
    game:GetService("ReplicatedStorage"):WaitForChild("HDAdminHDClient")
        :WaitForChild("Signals"):WaitForChild("RequestCommandSilent")
        :InvokeServer(unpack(args))
end

local function evaporatePlayer(targetPlayer)
    sendCommand(";paint " .. targetPlayer.Name .. " white")
end

-- Setup your outfit and announce
local function setupSelf()
    local commands = {
        ";paint me white",
        ";h SOMEONE GOT INFECTED!"
    }
    for _, command in ipairs(commands) do
        sendCommand(command)
        task.wait(0.2)
    end
end

-- Touch detection
local function setupTouchDetection(character)
    for _, part in ipairs(character:GetChildren()) do
        if part:IsA("BasePart") then
            part.Touched:Connect(function(hit)
                local targetChar = hit:FindFirstAncestorWhichIsA("Model")
                if targetChar and targetChar ~= character and targetChar:FindFirstChild("Humanoid") then
                    local targetPlayer = game.Players:GetPlayerFromCharacter(targetChar)
                    if targetPlayer and targetPlayer ~= player then
                        if not touchedPlayers[targetPlayer.Name] then
                            touchedPlayers[targetPlayer.Name] = true
                            evaporatePlayer(targetPlayer)

                            task.delay(3, function()
                                touchedPlayers[targetPlayer.Name] = nil
                            end)
                        end
                    end
                end
            end)
        end
    end
end

-- If character added
player.CharacterAdded:Connect(function(character)
    character:WaitForChild("HumanoidRootPart")
    setupSelf()
    setupTouchDetection(character)
end)

-- If already spawned
if player.Character then
    setupSelf()
    setupTouchDetection(player.Character)
end

-- Mobile tap detection
UIS.TouchTap:Connect(function(touchPositions, isProcessed)
    if isProcessed then return end
    if #touchPositions > 0 then
        local screenPoint = touchPositions[1]
        local unitRay = camera:ScreenPointToRay(screenPoint.X, screenPoint.Y)
        
        local raycastParams = RaycastParams.new()
        raycastParams.FilterDescendantsInstances = {player.Character}
        raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

        local raycastResult = workspace:Raycast(unitRay.Origin, unitRay.Direction * 1000, raycastParams)

        if raycastResult then
            local hitPart = raycastResult.Instance
            if hitPart then
                local character = hitPart:FindFirstAncestorWhichIsA("Model")
                if character and character:FindFirstChild("Humanoid") then
                    local targetPlayer = game.Players:GetPlayerFromCharacter(character)
                    if targetPlayer and targetPlayer ~= player then
                        if not touchedPlayers[targetPlayer.Name] then
                            touchedPlayers[targetPlayer.Name] = true
                            evaporatePlayer(targetPlayer)

                            task.delay(3, function()
                                touchedPlayers[targetPlayer.Name] = nil
                            end)
                        end
                    end
                end
            end
        end
    end
end)
